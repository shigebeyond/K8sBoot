- app(nginx):
    - config:
        auther: shigebeyond
        #nginx.conf: ${read_file(./nginx.conf)}
#    - config_files: ./nginx.conf # 单个文件
#    - config_files: ./conf/ # 目录
    - config_files: # 文件list
        - ./nginx.conf
        - ./index.html
#    - config_files: # 文件dict，key是配置名，value是文件路径
#        nginx.conf: ./nginx.conf

#    - secret_files: ./nginx.conf # 与 config_files 调用一样

    - containers:
        nginx:
          image: nginx
          env:
            TZ: Asia/Shanghai
            POD_NAME: ${from_field(metadata.name)}
            POD_IP: ${from_field(status.podIP)}
          ports: # 端口映射
            - 30000:80 # 服务端口:容器端口
            #- 30000:30000:80 # 宿主机端口:服务端口:容器端口
            #- udp://30000:80 # 前面加协议
          volumes: # 卷映射
            - /lnmp/www:/www
            # nginx配置文件挂载： https://blog.csdn.net/weixin_47415962/article/details/116003059
            - config://:/usr/share/nginx/html # 挂载configmap所有key到目录
            - config://nginx.conf:/etc/nginx/nginx.conf # 挂载configmap单个key到文件
          ready?: # 就绪态
            # 各种秒数
            #seconds: initialDelaySeconds=5 periodSeconds=5 timeoutSeconds=5 successThreshold=1 failureThreshold=5 # 全写
            seconds: i=5 p=5 t=5 s=1 f=5 # 简写
            # 动作
            action: ls /etc/nginx/
          live?: # 存活性探针
            # 各种秒数
            #seconds: initialDelaySeconds=5 periodSeconds=5 timeoutSeconds=5 successThreshold=1 failureThreshold=5 # 全写
            seconds: i=5 p=5 t=5 s=1 f=5 # 简写
            # 动作
            action: http://localhost:80 # 在pod中执行，请使用容器端口
          resources: # 资源
            cpu: 0.01
            memory: 50Mi

    # 部署
     # 简写
#    - rc: 1
#    - rs: 1
#    - ds: 1
#    - sts: 1
#    - deploy: 1

    # 完整写法
#    - rc:
#        replicas: 1
#    - rs:
#        replicas: 1
#    - ds:
#        replicas: 1
#    - sts:
#        replicas: 1
#    - pod:
    - deploy:
        replicas: 1 # 副本数
        nodeSelector: # 节点选择
          beta.kubernetes.io/os: linux
        tolerations: # 容忍
#          - node-role.kubernetes.io/master:NoSchedule
          - node-role.kubernetes.io/control-plane:NoSchedule
